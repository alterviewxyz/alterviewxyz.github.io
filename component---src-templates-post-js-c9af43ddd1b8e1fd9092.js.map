{"version":3,"sources":["webpack:///./src/templates/post.js","webpack:///./src/utils/media.js","webpack:///./config/SiteConfig.js","webpack:///./src/components/Article.js","webpack:///./src/components/Button.js","webpack:///./src/components/Header.js","webpack:///./config/Theme.js","webpack:///./src/components/Layout.js","webpack:///./src/components/PrevNext.js","webpack:///./src/components/SectionTitle.js","webpack:///./src/components/SEO.js","webpack:///./src/components/Subline.js","webpack:///./src/components/Wrapper.js"],"names":["Content","styled_components__WEBPACK_IMPORTED_MODULE_4__","b","article","withConfig","displayName","props","theme","colors","bg","_utils_media__WEBPACK_IMPORTED_MODULE_7__","a","tablet","phone","Title","h1","PostContent","div","Post","_props$pageContext","pageContext","slug","prev","next","postNode","data","markdownRemark","post","frontmatter","react__WEBPACK_IMPORTED_MODULE_0___default","createElement","components__WEBPACK_IMPORTED_MODULE_6__","d","i","f","postPath","postSEO","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","title","_config_SiteConfig__WEBPACK_IMPORTED_MODULE_8___default","siteTitle","c","gatsby__WEBPACK_IMPORTED_MODULE_3__","Link","to","h","date","timeToRead","lodash_kebabCase__WEBPACK_IMPORTED_MODULE_5___default","category","dangerouslySetInnerHTML","__html","html","e","__webpack_exports__","default","E","propTypes","prop_types__WEBPACK_IMPORTED_MODULE_1___default","shape","string","isRequired","object","defaultProps","postQuery","__webpack_require__","media","275","t","module","exports","pathPrefix","siteTitleAlt","siteUrl","siteLanguage","siteBanner","favicon","siteDescription","userTwitter","ogSiteName","themeColor","backgroundColor","headerFontFamily","bodyFontFamily","baseFontSize","279","site","buildTime","280","n","r","o","l","m","s","styled_components_browser_esm","h2","Initiale","span","Excerpt","p","Article_Article","_ref","excerpt","firstChar","charAt","react_default","gatsby_browser_entry","components_Subline","kebabCase_default","components_Article","prop_types_default","number","components_Button","button","primary","big","transitions","normal","Object","polished_es","Wrapper","header","Header_Header","children","components_Header","w","oneOfType","array","node","Theme","grey","dark","light","ultraLight","fontSize","small","C","P","_","injectGlobal","Footer","footer","Layout_Layout","StaticQuery","query","render","Fragment","components_SEO","href","_1719855500","components_Layout","z","PrevNext_Wrapper","Prev","Next","PrevNext_PrevNext","fields","components_PrevNext","q","components_SectionTitle","SEO_SEO","description","image","postURL","realPrefix","SiteConfig_default","blogURL","schemaOrgJSONLD","@context","@type","url","name","alternateName","push","itemListElement","position","item","@id","headline","Helmet_default","content","type","JSON","stringify","property","siteFBAppID","H","bool","sectionTitle","components_Wrapper","y","v","S","O","B","J","W","M","324"],"mappings":"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","file":"component---src-templates-post-js-c9af43ddd1b8e1fd9092.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { Link, graphql } from 'gatsby';\nimport styled from 'styled-components';\nimport kebabCase from 'lodash/kebabCase';\nimport { Layout, Wrapper, Header, Subline, SEO, PrevNext } from 'components';\nimport { media } from '../utils/media';\nimport config from '../../config/SiteConfig';\nimport '../utils/prismjs-theme.css';\n\nconst Content = styled.article`\n  grid-column: 2;\n  box-shadow: 0 4px 120px rgba(0, 0, 0, 0.1);\n  max-width: 1000px;\n  border-radius: 1rem;\n  padding: 2rem 4rem;\n  background-color: ${props => props.theme.colors.bg};\n  z-index: 9000;\n  margin-top: -3rem;\n  @media ${media.tablet} {\n    padding: 3rem 3rem;\n  }\n  @media ${media.phone} {\n    padding: 2rem 1.5rem;\n  }\n`;\n\nconst Title = styled.h1`\n  margin-bottom: 1rem;\n`;\n\nconst PostContent = styled.div`\n  margin-top: 4rem;\n`;\n\nconst Post = props => {\n  const { slug, prev, next } = props.pageContext;\n  const postNode = props.data.markdownRemark;\n  const post = postNode.frontmatter;\n\n  return (\n    <Layout>\n      <Wrapper>\n        <SEO postPath={slug} postNode={postNode} postSEO />\n        <Helmet title={`${post.title} | ${config.siteTitle}`} />\n        <Header>\n          <Link to=\"/\">{config.siteTitle}</Link>\n        </Header>\n        <Content>\n          <Title>{post.title}</Title>\n          <Subline>\n            {post.date} &mdash; {postNode.timeToRead} Min Read &mdash; In{' '}\n            <Link to={`/categories/${kebabCase(post.category)}`}>{post.category}</Link>\n          </Subline>\n          <PostContent dangerouslySetInnerHTML={{ __html: postNode.html }} />\n          <PrevNext prev={prev} next={next} />\n        </Content>\n      </Wrapper>\n    </Layout>\n  );\n};\n\nexport default Post;\n\nPost.propTypes = {\n  pageContext: PropTypes.shape({\n    slug: PropTypes.string.isRequired,\n    next: PropTypes.object,\n    prev: PropTypes.object,\n  }),\n  data: PropTypes.shape({\n    markdownRemark: PropTypes.object.isRequired,\n  }).isRequired,\n};\n\nPost.defaultProps = {\n  pageContext: PropTypes.shape({\n    next: null,\n    prev: null,\n  }),\n};\n\nexport const postQuery = graphql`\n  query postBySlug($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n        date(formatString: \"DD.MM.YYYY\")\n        category\n      }\n      timeToRead\n    }\n  }\n`;\n","const sizes = {\n  tablet: '1200px',\n  phone: '600px',\n};\n\nexport const media = {\n  tablet: `(max-width: ${sizes.tablet})`,\n  phone: `(max-width: ${sizes.phone})`,\n};\n","module.exports = {\n  pathPrefix: '/', // Prefix for all links. If you deploy your site to example.com/portfolio your pathPrefix should be \"portfolio\"\n\n  siteTitle: 'Alterview Podcasts', // Navigation and Site Title\n  siteTitleAlt: 'Alterview Podcasts - پادکست‌های آلترویو', // Alternative Site title for SEO\n  siteUrl: 'https://alterview.xyz/podcasts', // Domain of your site. No trailing slash!\n  siteLanguage: 'fa', // Language Tag on <html> element\n  siteBanner: '/social/banner.jpg', // Your image for og:image tag. You can find it in the /static folder\n  favicon: 'src/favicon.png', // Your image for favicons. You can find it in the /src folder\n  siteDescription: 'پادکست‌های تولیدی توسط تیم آلترویو را از اینجا بشنوید!', // Your site description\n\n  // siteFBAppID: '123456789', // Facebook App ID - Optional\n  userTwitter: '@alterviewxyz', // Twitter Username - Optional\n  ogSiteName: 'alterviewxyz', // Facebook Site Name - Optional\n\n  // Manifest and Progress color\n  // See: https://developers.google.com/web/fundamentals/web-app-manifest/\n  themeColor: '#3498DB',\n  backgroundColor: '#2b2e3c',\n\n  // Settings for typography.js\n  headerFontFamily: 'Bitter',\n  bodyFontFamily: 'Open Sans',\n  baseFontSize: '18px',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Link } from 'gatsby';\nimport kebabCase from 'lodash/kebabCase';\n\nimport { Subline } from 'components';\n\nconst Post = styled.article`\n  display: flex;\n  flex-direction: column;\n  margin-top: 3.5rem;\n  margin-bottom: 3.5rem;\n`;\n\nconst Title = styled.h2`\n  position: relative;\n  text-shadow: 0 12px 30px rgba(0, 0, 0, 0.15);\n  margin-bottom: 0.75rem;\n`;\n\nconst Initiale = styled.span`\n  position: absolute;\n  font-size: 7rem;\n  transform: translate(-50%, -50%);\n  opacity: 0.08;\n  user-select: none;\n  z-index: -1;\n`;\n\nconst Excerpt = styled.p`\n  grid-column: -1 / 1;\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n`;\n\nconst Article = ({ title, date, excerpt, slug, timeToRead, category }) => {\n  const firstChar = title.charAt(0);\n\n  return (\n    <Post>\n      <Title>\n        <Initiale>{firstChar}</Initiale>\n        <Link to={slug}>{title}</Link>\n      </Title>\n      <Subline>\n        {date} &mdash; {timeToRead} Min Read &mdash; In{' '}\n        <Link to={`/categories/${kebabCase(category)}`}>{category}</Link>\n      </Subline>\n      <Excerpt>{excerpt}</Excerpt>\n    </Post>\n  );\n};\n\nexport default Article;\n\nArticle.propTypes = {\n  title: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  excerpt: PropTypes.string.isRequired,\n  slug: PropTypes.string.isRequired,\n  timeToRead: PropTypes.number.isRequired,\n  category: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\nimport { lighten } from 'polished';\n\nconst Button = styled.button`\n  background: ${props => props.theme.colors.primary};\n  border: none;\n  display: inline-flex;\n  align-items: center;\n  border-radius: ${props => (props.big ? '1.5rem' : '1rem')};\n  font-size: ${props => (props.big ? '1.2rem' : '1rem')};\n  color: white;\n  padding: ${props => (props.big ? '0.35rem 1.6rem' : '0.25rem 1.5rem')};\n  transition: all ${props => props.theme.transitions.normal};\n  box-shadow: 0 4px 6px rgba(50, 50, 93, 0.11), 0 1px 3px rgba(0, 0, 0, 0.08);\n  &:hover {\n    background: ${props => lighten(0.05, props.theme.colors.primary)};\n    cursor: pointer;\n    transform: translateY(-2px);\n  }\n  &:focus {\n    outline: none;\n  }\n  svg {\n    width: 20px;\n    height: 20px;\n    margin-right: 0.75rem;\n    fill: white;\n  }\n`;\n\nexport default Button;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { darken, lighten } from 'polished';\n\nconst Wrapper = styled.header`\n  background: linear-gradient(\n    45deg,\n    ${props => darken(0.1, props.theme.colors.primary)},\n    ${props => lighten(0.1, props.theme.colors.primary)}\n  );\n  grid-column: 1 / -1;\n  margin-left: -1rem;\n  margin-right: -1rem;\n  padding: 2rem 2rem 5rem 2rem;\n  box-shadow: inset 0px -10px 30px 0px rgba(0, 0, 0, 0.1);\n`;\n\nconst Content = styled.div`\n  max-width: 1000px;\n  margin: 0 auto;\n\n  a {\n    color: white;\n    &:hover {\n      opacity: 0.85;\n      color: white;\n    }\n  }\n`;\n\nconst Header = props => (\n  <Wrapper>\n    <Content>{props.children}</Content>\n  </Wrapper>\n);\n\nexport default Header;\n\nHeader.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.array, PropTypes.node]).isRequired,\n};\n","const colors = {\n  primary: '#d02e77', // Color for buttons or links\n  bg: 'white', // Background color\n  grey: {\n    dark: 'rgba(0, 0, 0, 0.9)',\n    default: 'rgba(0, 0, 0, 0.7)',\n    light: 'rgba(0, 0, 0, 0.5)',\n    ultraLight: 'rgba(0, 0, 0, 0.25)',\n  },\n};\n\nconst transitions = {\n  normal: '0.5s',\n};\n\nconst fontSize = {\n  small: '0.9rem',\n};\n\nconst theme = {\n  colors,\n  transitions,\n  fontSize,\n};\n\nexport default theme;\n","/* eslint no-unused-expressions:0 */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { StaticQuery, graphql } from 'gatsby';\nimport styled, { ThemeProvider, injectGlobal } from 'styled-components';\nimport { SEO } from 'components';\nimport theme from '../../config/Theme';\nimport { media } from '../utils/media';\n\ninjectGlobal`\n  ::selection {\n    color: ${theme.colors.bg};\n    background: ${theme.colors.primary};\n  }\n  body {\n    background: ${theme.colors.bg};\n    color: ${theme.default};\n    @media ${media.phone} {\n      font-size: 14px;\n    }\n  }\n  a {\n    color: ${theme.colors.grey.dark};\n    text-decoration: none;\n    transition: all ${theme.transitions.normal};\n  }\n  a:hover {\n    color: ${theme.colors.primary};\n  }\n  h1, h2, h3, h4 {\n    color: ${theme.colors.grey.dark};\n  }\n  blockquote {\n    font-style: italic;\n    position: relative;\n  }\n\n  blockquote:before {\n    content: \"\";\n    position: absolute;\n    background: ${theme.colors.primary};\n    height: 100%;\n    width: 6px;\n    margin-left: -1.6rem;\n  }\n  label {\n    margin-bottom: .5rem;\n    color: ${theme.colors.grey.dark};\n  }\n  input, textarea {\n    border-radius: .5rem;\n    border: none;\n    background: rgba(0, 0, 0, 0.05);\n    padding: .25rem 1rem;\n    &:focus {\n      outline: none;\n    }\n  }\n`;\n\nconst Footer = styled.footer`\n  text-align: center;\n  padding: 3rem 0;\n  span {\n    font-size: 0.75rem;\n  }\n`;\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query LayoutQuery {\n        site {\n          buildTime(formatString: \"DD.MM.YYYY\")\n        }\n      }\n    `}\n    render={data => (\n      <ThemeProvider theme={theme}>\n        <React.Fragment>\n          <SEO />\n          {children}\n          <Footer>\n            &copy; 2018 by John Doe. All rights reserved. <br />\n            <a href=\"https://github.com/LeKoArts/gatsby-starter-minimal-blog\">GitHub Repository</a> <br />\n            <span>Last build: {data.site.buildTime}</span>\n          </Footer>;\n        </React.Fragment>\n      </ThemeProvider>\n    )}\n  />\n);\n\nexport default Layout;\n\nLayout.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.array, PropTypes.node]).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Link } from 'gatsby';\n\nconst Wrapper = styled.div`\n  display: flex;\n  margin: 6rem auto 0 auto;\n  a {\n    color: ${props => props.theme.colors.primary};\n    display: flex;\n    align-items: center;\n  }\n  justify-items: center;\n`;\n\nconst Prev = styled.div`\n  span {\n    text-transform: uppercase;\n    font-size: 0.8rem;\n    color: ${props => props.theme.colors.grey.light};\n  }\n`;\n\nconst Next = styled.div`\n  margin-left: auto;\n  text-align: right;\n  span {\n    text-transform: uppercase;\n    font-size: 0.8rem;\n    color: ${props => props.theme.colors.grey.light};\n  }\n`;\n\nconst PrevNext = ({ next, prev }) => (\n  <Wrapper>\n    {prev && (\n      <Prev>\n        <span>Previous</span>\n        <Link to={prev.fields.slug}>{prev.frontmatter.title}</Link>\n      </Prev>\n    )}\n\n    {next && (\n      <Next>\n        <span>Next</span>\n        <Link to={next.fields.slug}>{next.frontmatter.title}</Link>\n      </Next>\n    )}\n  </Wrapper>\n);\n\nexport default PrevNext;\n\nPrevNext.propTypes = {\n  next: PropTypes.object,\n  prev: PropTypes.object,\n};\n\nPrevNext.defaultProps = {\n  next: null,\n  prev: null,\n};\n","import styled from 'styled-components';\n\nconst SectionTitle = styled.div`\n  font-size: ${props => props.theme.fontSize.small};\n  text-transform: uppercase;\n  font-weight: bold;\n  text-align: center;\n  color: ${props => props.theme.colors.grey.dark};\n  position: relative;\n  padding-bottom: 1rem;\n  margin-bottom: 4rem;\n\n  &:after {\n    content: '';\n    height: 1px;\n    width: 50px;\n    position: absolute;\n    bottom: 0;\n    left: 50%;\n    margin-left: -25px;\n    background: ${props => props.theme.colors.grey.ultraLight};\n  }\n`;\n\nexport default SectionTitle;\n","/* eslint-disable react/require-default-props */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport config from '../../config/SiteConfig';\n\nconst SEO = props => {\n  const { postNode, postPath, postSEO } = props;\n  let title;\n  let description;\n  let image;\n  let postURL;\n  const realPrefix = config.pathPrefix === '/' ? '' : config.pathPrefix;\n  if (postSEO) {\n    const postMeta = postNode.frontmatter;\n    title = postMeta.title; // eslint-disable-line prefer-destructuring\n    description = postNode.excerpt;\n    image = config.siteBanner;\n    postURL = config.siteUrl + realPrefix + postPath;\n  } else {\n    title = config.siteTitle;\n    description = config.siteDescription;\n    image = config.siteBanner;\n  }\n  image = config.siteUrl + realPrefix + image;\n  const blogURL = config.siteUrl + config.pathPrefix;\n  const schemaOrgJSONLD = [\n    {\n      '@context': 'http://schema.org',\n      '@type': 'WebSite',\n      url: blogURL,\n      name: title,\n      alternateName: config.siteTitleAlt ? config.siteTitleAlt : '',\n    },\n  ];\n  if (postSEO) {\n    schemaOrgJSONLD.push(\n      {\n        '@context': 'http://schema.org',\n        '@type': 'BreadcrumbList',\n        itemListElement: [\n          {\n            '@type': 'ListItem',\n            position: 1,\n            item: {\n              '@id': postURL,\n              name: title,\n              image,\n            },\n          },\n        ],\n      },\n      {\n        '@context': 'http://schema.org',\n        '@type': 'BlogPosting',\n        url: blogURL,\n        name: title,\n        alternateName: config.siteTitleAlt ? config.siteTitleAlt : '',\n        headline: title,\n        image: {\n          '@type': 'ImageObject',\n          url: image,\n        },\n        description,\n      }\n    );\n  }\n  return (\n    <Helmet>\n      <title>{config.siteTitle}</title>\n      <meta name=\"description\" content={description} />\n      <meta name=\"keywords\" content=\"minimal, blog, layout\" />\n      <meta name=\"image\" content={image} />\n      <script type=\"application/ld+json\">{JSON.stringify(schemaOrgJSONLD)}</script>\n      <meta property=\"og:locale\" content=\"de_DE\" />\n      <meta property=\"og:site_name\" content={config.ogSiteName ? config.ogSiteName : ''} />\n      <meta property=\"og:url\" content={postSEO ? postURL : blogURL} />\n      {postSEO ? <meta property=\"og:type\" content=\"article\" /> : null}\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={image} />\n      <meta property=\"fb:app_id\" content={config.siteFBAppID ? config.siteFBAppID : ''} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:creator\" content={config.userTwitter ? config.userTwitter : ''} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:url\" content={config.siteUrl} />\n      <meta name=\"twitter:description\" content={description} />\n      <meta name=\"twitter:image\" content={image} />\n    </Helmet>\n  );\n};\n\nexport default SEO;\n\nSEO.propTypes = {\n  postNode: PropTypes.object,\n  postPath: PropTypes.string,\n  postSEO: PropTypes.bool,\n};\n","import styled from 'styled-components';\n\nconst Subline = styled.div`\n  font-size: ${props => props.theme.fontSize.small};\n  color: ${props => props.theme.colors.grey.light};\n  ${props => props.sectionTitle && 'margin-top: -3rem'};\n  ${props => props.sectionTitle && 'margin-bottom: 4rem'};\n  ${props => props.sectionTitle && 'text-align: center'};\n`;\n\nexport default Subline;\n","import styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: 1fr minmax(320px, 1000px) 1fr;\n  padding: 0 1rem;\n`;\n\nexport default Wrapper;\n"],"sourceRoot":""}