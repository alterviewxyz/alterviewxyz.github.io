{"version":3,"sources":["webpack:///./src/templates/category.js","webpack:///./src/utils/media.js","webpack:///./config/SiteConfig.js","webpack:///./src/components/Article.js","webpack:///./src/components/Button.js","webpack:///./src/components/Header.js","webpack:///./config/Theme.js","webpack:///./src/components/Layout.js","webpack:///./src/components/PrevNext.js","webpack:///./src/components/SectionTitle.js","webpack:///./src/components/SEO.js","webpack:///./src/components/Subline.js","webpack:///./src/components/Wrapper.js"],"names":["Content","styled_components__WEBPACK_IMPORTED_MODULE_5__","b","div","withConfig","displayName","props","theme","colors","bg","_utils_media__WEBPACK_IMPORTED_MODULE_7__","a","tablet","phone","Category","category","pageContext","_props$data$allMarkdo","data","allMarkdownRemark","edges","totalCount","subline","react__WEBPACK_IMPORTED_MODULE_1___default","createElement","components__WEBPACK_IMPORTED_MODULE_6__","d","i","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","title","_config_SiteConfig__WEBPACK_IMPORTED_MODULE_8___default","siteTitle","c","gatsby__WEBPACK_IMPORTED_MODULE_4__","Link","to","g","h","sectionTitle","map","post","node","frontmatter","date","excerpt","timeToRead","slug","fields","podcast","key","__webpack_exports__","default","propTypes","prop_types__WEBPACK_IMPORTED_MODULE_2___default","shape","string","isRequired","array","number","postQuery","__webpack_require__","media","279","e","t","module","exports","pathPrefix","siteTitleAlt","siteUrl","siteLanguage","siteBanner","favicon","siteDescription","userTwitter","ogSiteName","themeColor","backgroundColor","headerFontFamily","bodyFontFamily","baseFontSize","282","site","buildTime","283","n","r","o","l","m","s","Post","styled_components_browser_esm","article","Title","h2","Initiale","span","Excerpt","p","Article_Article","_ref","firstChar","charAt","react_default","gatsby_browser_entry","components_Subline","kebabCase_default","components_Article","f","prop_types_default","components_Button","button","primary","big","transitions","normal","Object","polished_es","Wrapper","header","Header_Header","children","components_Header","w","oneOfType","Theme","body","grey","dark","light","ultraLight","fontSize","small","C","R","k","injectGlobal","Footer","footer","Layout_Layout","StaticQuery","query","render","Fragment","components_SEO","href","_1719855500","components_Layout","z","PrevNext_Wrapper","Prev","Next","PrevNext_PrevNext","next","prev","components_PrevNext","j","object","defaultProps","components_SectionTitle","SEO_SEO","description","image","postURL","postNode","postPath","postSEO","realPrefix","SiteConfig_default","blogURL","schemaOrgJSONLD","@context","@type","url","name","alternateName","push","itemListElement","position","item","@id","headline","Helmet_default","content","type","JSON","stringify","property","siteFBAppID","J","bool","components_Wrapper","y","v","A","O","B","W","H","M"],"mappings":"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","file":"component---src-templates-category-js-5793b7203ca1668e16d5.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { Link, graphql } from 'gatsby';\nimport styled from 'styled-components';\nimport { Layout, Wrapper, Header, Subline, Article, SectionTitle } from 'components';\nimport { media } from '../utils/media';\nimport config from '../../config/SiteConfig';\n\nconst Content = styled.div`\n  grid-column: 2;\n  box-shadow: 0 4px 120px rgba(0, 0, 0, 0.1);\n  border-radius: 1rem;\n  padding: 2rem 4rem;\n  background-color: ${props => props.theme.colors.bg};\n  z-index: 9000;\n  margin-top: -3rem;\n  @media ${media.tablet} {\n    padding: 3rem 3rem;\n  }\n  @media ${media.phone} {\n    padding: 2rem 1.5rem;\n  }\n`;\n\nconst Category = props => {\n  const { category } = props.pageContext;\n  const { edges, totalCount } = props.data.allMarkdownRemark;\n  const subline = `${totalCount} post${totalCount === 1 ? '' : 's'} tagged with \"${category}\"`;\n\n  return (\n    <Layout>\n      <Wrapper>\n        <Helmet title={`${category} | ${config.siteTitle}`} />\n        <Header>\n          <Link to=\"/\">{config.siteTitle}</Link>\n        </Header>\n        <Content>\n          <SectionTitle>Category &ndash; {category}</SectionTitle>\n          <Subline sectionTitle>\n            {subline} (See <Link to=\"/categories\">all categories</Link>)\n          </Subline>\n          {edges.map(post => (\n            <Article\n              title={post.node.frontmatter.title}\n              date={post.node.frontmatter.date}\n              excerpt={post.node.excerpt}\n              timeToRead={post.node.timeToRead}\n              slug={post.node.fields.slug}\n              category={post.node.frontmatter.category}\n              podcast={post.node.frontmatter.podcast}\n              key={post.node.fields.slug}\n            />\n          ))}\n        </Content>\n      </Wrapper>\n    </Layout>\n  );\n};\n\nexport default Category;\n\nCategory.propTypes = {\n  pageContext: PropTypes.shape({\n    category: PropTypes.string.isRequired,\n  }).isRequired,\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      edges: PropTypes.array.isRequired,\n      totalCount: PropTypes.number.isRequired,\n    }),\n  }).isRequired,\n};\n\nexport const postQuery = graphql`\n  query CategoryPage($category: String!) {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { category: { eq: $category } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          frontmatter {\n            title\n            date(formatString: \"DD.MM.YYYY\")\n            category\n            podcast\n          }\n          fields {\n            slug\n          }\n          excerpt(pruneLength: 200)\n          timeToRead\n        }\n      }\n    }\n  }\n`;\n","const sizes = {\n  tablet: '1200px',\n  phone: '600px',\n};\n\nexport const media = {\n  tablet: `(max-width: ${sizes.tablet})`,\n  phone: `(max-width: ${sizes.phone})`,\n};\n","module.exports = {\n  pathPrefix: '/', // Prefix for all links. If you deploy your site to example.com/portfolio your pathPrefix should be \"portfolio\"\n\n  siteTitle: 'Alterview Podcasts', // Navigation and Site Title\n  siteTitleAlt: 'Alterview Podcasts - پادکست‌های آلترویو', // Alternative Site title for SEO\n  siteUrl: 'https://alterview.xyz/podcasts', // Domain of your site. No trailing slash!\n  siteLanguage: 'fa', // Language Tag on <html> element\n  siteBanner: '/social/banner.jpg', // Your image for og:image tag. You can find it in the /static folder\n  favicon: 'src/favicon.png', // Your image for favicons. You can find it in the /src folder\n  siteDescription: 'پادکست‌های تولیدی توسط تیم آلترویو را از اینجا بشنوید!', // Your site description\n\n  // siteFBAppID: '123456789', // Facebook App ID - Optional\n  userTwitter: '@alterviewxyz', // Twitter Username - Optional\n  ogSiteName: 'alterviewxyz', // Facebook Site Name - Optional\n\n  // Manifest and Progress color\n  // See: https://developers.google.com/web/fundamentals/web-app-manifest/\n  themeColor: '#3498DB',\n  backgroundColor: '#2b2e3c',\n\n  // Settings for typography.js\n  headerFontFamily: 'Bitter',\n  bodyFontFamily: 'Open Sans',\n  baseFontSize: '18px',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Link } from 'gatsby';\nimport kebabCase from 'lodash/kebabCase';\n\nimport { Subline } from 'components';\n\nconst Post = styled.article`\n  display: flex;\n  flex-direction: column;\n  margin-top: 3.5rem;\n  margin-bottom: 3.5rem;\n`;\n\nconst Title = styled.h2`\n  position: relative;\n  text-shadow: 0 12px 30px rgba(0, 0, 0, 0.15);\n  margin-bottom: 0.75rem;\n`;\n\nconst Initiale = styled.span`\n  position: absolute;\n  font-size: 7rem;\n  transform: translate(-50%, -50%);\n  opacity: 0.08;\n  user-select: none;\n  z-index: -1;\n`;\n\nconst Excerpt = styled.p`\n  grid-column: -1 / 1;\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n`;\n\nconst Article = ({ title, date, excerpt, slug, timeToRead, category, podcast }) => {\n  const firstChar = title.charAt(0);\n\n  return (\n    <Post>\n      <Title>\n        <Initiale>{firstChar}</Initiale>\n        <Link to={slug}>{title}</Link>\n      </Title>\n      <Subline>\n        {date} &mdash; {timeToRead} Min Read &mdash; In{' '}\n        <Link to={`/categories/${kebabCase(category)}`}>{category}</Link>\n         | \n        <Link to={`/podcasts/${kebabCase(podcast)}`}>{podcast}</Link>\n      </Subline>\n      <Excerpt>{excerpt}</Excerpt>\n    </Post>\n  );\n};\n\nexport default Article;\n\nArticle.propTypes = {\n  title: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  excerpt: PropTypes.string.isRequired,\n  slug: PropTypes.string.isRequired,\n  timeToRead: PropTypes.number.isRequired,\n  category: PropTypes.string.isRequired,\n  podcast: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\nimport { lighten } from 'polished';\n\nconst Button = styled.button`\n  background: ${props => props.theme.colors.primary};\n  border: none;\n  display: inline-flex;\n  align-items: center;\n  border-radius: ${props => (props.big ? '1.5rem' : '1rem')};\n  font-size: ${props => (props.big ? '1.2rem' : '1rem')};\n  color: white;\n  padding: ${props => (props.big ? '0.35rem 1.6rem' : '0.25rem 1.5rem')};\n  transition: all ${props => props.theme.transitions.normal};\n  box-shadow: 0 4px 6px rgba(50, 50, 93, 0.11), 0 1px 3px rgba(0, 0, 0, 0.08);\n  &:hover {\n    background: ${props => lighten(0.05, props.theme.colors.primary)};\n    cursor: pointer;\n    transform: translateY(-2px);\n  }\n  &:focus {\n    outline: none;\n  }\n  svg {\n    width: 20px;\n    height: 20px;\n    margin-right: 0.75rem;\n    fill: white;\n  }\n`;\n\nexport default Button;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { darken, lighten } from 'polished';\n\nconst Wrapper = styled.header`\n  background: linear-gradient(\n    45deg,\n    ${props => darken(0.1, props.theme.colors.primary)},\n    ${props => lighten(0.1, props.theme.colors.primary)}\n  );\n  grid-column: 1 / -1;\n  margin-left: -1rem;\n  margin-right: -1rem;\n  padding: 2rem 2rem 5rem 2rem;\n  box-shadow: inset 0px -10px 30px 0px rgba(0, 0, 0, 0.1);\n`;\n\nconst Content = styled.div`\n  max-width: 1000px;\n  margin: 0 auto;\n\n  a {\n    color: white;\n    &:hover {\n      opacity: 0.85;\n      color: white;\n    }\n  }\n`;\n\nconst Header = props => (\n  <Wrapper>\n    <Content>{props.children}</Content>\n  </Wrapper>\n);\n\nexport default Header;\n\nHeader.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.array, PropTypes.node]).isRequired,\n};\n","const colors = {\n  primary: '#009688', // Color for buttons or links\n  body:'#f2f2f2',\n  bg: 'white', // Background color\n  grey: {\n    dark: 'rgba(0, 0, 0, 0.9)',\n    default: 'rgba(0, 0, 0, 0.7)',\n    light: 'rgba(0, 0, 0, 0.5)',\n    ultraLight: 'rgba(0, 0, 0, 0.25)',\n  },\n};\n\nconst transitions = {\n  normal: '0.5s',\n};\n\nconst fontSize = {\n  small: '0.9rem',\n};\n\nconst theme = {\n  colors,\n  transitions,\n  fontSize,\n};\n\nexport default theme;\n","/* eslint no-unused-expressions:0 */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { StaticQuery, graphql } from 'gatsby';\nimport styled, { ThemeProvider, injectGlobal } from 'styled-components';\nimport { SEO } from 'components';\nimport theme from '../../config/Theme';\nimport { media } from '../utils/media';\n\ninjectGlobal`\n  ::selection {\n    color: ${theme.colors.bg};\n    background: ${theme.colors.primary};\n  }\n  body {\n    background: ${theme.colors.bg};\n    color: ${theme.default};\n    @media ${media.phone} {\n      font-size: 14px;\n    }\n  }\n  a {\n    color: ${theme.colors.grey.dark};\n    text-decoration: none;\n    transition: all ${theme.transitions.normal};\n  }\n  a:hover {\n    color: ${theme.colors.primary};\n  }\n  h1, h2, h3, h4 {\n    color: ${theme.colors.grey.dark};\n  }\n  blockquote {\n    font-style: italic;\n    position: relative;\n  }\n\n  blockquote:before {\n    content: \"\";\n    position: absolute;\n    background: ${theme.colors.primary};\n    height: 100%;\n    width: 6px;\n    margin-left: -1.6rem;\n  }\n  label {\n    margin-bottom: .5rem;\n    color: ${theme.colors.grey.dark};\n  }\n  input, textarea {\n    border-radius: .5rem;\n    border: none;\n    background: rgba(0, 0, 0, 0.05);\n    padding: .25rem 1rem;\n    &:focus {\n      outline: none;\n    }\n  }\n`;\n\nconst Footer = styled.footer`\n  text-align: center;\n  padding: 3rem 0;\n  span {\n    font-size: 0.75rem;\n  }\n`;\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query LayoutQuery {\n        site {\n          buildTime(formatString: \"DD.MM.YYYY\")\n        }\n      }\n    `}\n    render={data => (\n      <ThemeProvider theme={theme}>\n        <React.Fragment>\n          <SEO />\n          {children}\n          <Footer>\n            &copy; 2018 by John Doe. All rights reserved. <br />\n            <a href=\"https://github.com/LeKoArts/gatsby-starter-minimal-blog\">GitHub Repository</a> <br />\n            <span>Last build: {data.site.buildTime}</span>\n          </Footer>;\n        </React.Fragment>\n      </ThemeProvider>\n    )}\n  />\n);\n\nexport default Layout;\n\nLayout.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.array, PropTypes.node]).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Link } from 'gatsby';\n\nconst Wrapper = styled.div`\n  display: flex;\n  margin: 6rem auto 0 auto;\n  a {\n    color: ${props => props.theme.colors.primary};\n    display: flex;\n    align-items: center;\n  }\n  justify-items: center;\n`;\n\nconst Prev = styled.div`\n  span {\n    text-transform: uppercase;\n    font-size: 0.8rem;\n    color: ${props => props.theme.colors.grey.light};\n  }\n`;\n\nconst Next = styled.div`\n  margin-left: auto;\n  text-align: right;\n  span {\n    text-transform: uppercase;\n    font-size: 0.8rem;\n    color: ${props => props.theme.colors.grey.light};\n  }\n`;\n\nconst PrevNext = ({ next, prev }) => (\n  <Wrapper>\n    {prev && (\n      <Prev>\n        <span>Previous</span>\n        <Link to={prev.fields.slug}>{prev.frontmatter.title}</Link>\n      </Prev>\n    )}\n\n    {next && (\n      <Next>\n        <span>Next</span>\n        <Link to={next.fields.slug}>{next.frontmatter.title}</Link>\n      </Next>\n    )}\n  </Wrapper>\n);\n\nexport default PrevNext;\n\nPrevNext.propTypes = {\n  next: PropTypes.object,\n  prev: PropTypes.object,\n};\n\nPrevNext.defaultProps = {\n  next: null,\n  prev: null,\n};\n","import styled from 'styled-components';\n\nconst SectionTitle = styled.div`\n  font-size: ${props => props.theme.fontSize.small};\n  text-transform: uppercase;\n  font-weight: bold;\n  text-align: center;\n  color: ${props => props.theme.colors.grey.dark};\n  position: relative;\n  padding-bottom: 1rem;\n  margin-bottom: 4rem;\n\n  &:after {\n    content: '';\n    height: 1px;\n    width: 50px;\n    position: absolute;\n    bottom: 0;\n    left: 50%;\n    margin-left: -25px;\n    background: ${props => props.theme.colors.grey.ultraLight};\n  }\n`;\n\nexport default SectionTitle;\n","/* eslint-disable react/require-default-props */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport config from '../../config/SiteConfig';\n\nconst SEO = props => {\n  const { postNode, postPath, postSEO } = props;\n  let title;\n  let description;\n  let image;\n  let postURL;\n  const realPrefix = config.pathPrefix === '/' ? '' : config.pathPrefix;\n  if (postSEO) {\n    const postMeta = postNode.frontmatter;\n    title = postMeta.title; // eslint-disable-line prefer-destructuring\n    description = postNode.excerpt;\n    image = config.siteBanner;\n    postURL = config.siteUrl + realPrefix + postPath;\n  } else {\n    title = config.siteTitle;\n    description = config.siteDescription;\n    image = config.siteBanner;\n  }\n  image = config.siteUrl + realPrefix + image;\n  const blogURL = config.siteUrl + config.pathPrefix;\n  const schemaOrgJSONLD = [\n    {\n      '@context': 'http://schema.org',\n      '@type': 'WebSite',\n      url: blogURL,\n      name: title,\n      alternateName: config.siteTitleAlt ? config.siteTitleAlt : '',\n    },\n  ];\n  if (postSEO) {\n    schemaOrgJSONLD.push(\n      {\n        '@context': 'http://schema.org',\n        '@type': 'BreadcrumbList',\n        itemListElement: [\n          {\n            '@type': 'ListItem',\n            position: 1,\n            item: {\n              '@id': postURL,\n              name: title,\n              image,\n            },\n          },\n        ],\n      },\n      {\n        '@context': 'http://schema.org',\n        '@type': 'BlogPosting',\n        url: blogURL,\n        name: title,\n        alternateName: config.siteTitleAlt ? config.siteTitleAlt : '',\n        headline: title,\n        image: {\n          '@type': 'ImageObject',\n          url: image,\n        },\n        description,\n      }\n    );\n  }\n  return (\n    <Helmet>\n      <title>{config.siteTitle}</title>\n      <meta name=\"description\" content={description} />\n      <meta name=\"keywords\" content=\"minimal, blog, layout\" />\n      <meta name=\"image\" content={image} />\n      <script type=\"application/ld+json\">{JSON.stringify(schemaOrgJSONLD)}</script>\n      <meta property=\"og:locale\" content=\"de_DE\" />\n      <meta property=\"og:site_name\" content={config.ogSiteName ? config.ogSiteName : ''} />\n      <meta property=\"og:url\" content={postSEO ? postURL : blogURL} />\n      {postSEO ? <meta property=\"og:type\" content=\"article\" /> : null}\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={image} />\n      <meta property=\"fb:app_id\" content={config.siteFBAppID ? config.siteFBAppID : ''} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:creator\" content={config.userTwitter ? config.userTwitter : ''} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:url\" content={config.siteUrl} />\n      <meta name=\"twitter:description\" content={description} />\n      <meta name=\"twitter:image\" content={image} />\n    </Helmet>\n  );\n};\n\nexport default SEO;\n\nSEO.propTypes = {\n  postNode: PropTypes.object,\n  postPath: PropTypes.string,\n  postSEO: PropTypes.bool,\n};\n","import styled from 'styled-components';\n\nconst Subline = styled.div`\n  font-size: ${props => props.theme.fontSize.small};\n  color: ${props => props.theme.colors.grey.light};\n  ${props => props.sectionTitle && 'margin-top: -3rem'};\n  ${props => props.sectionTitle && 'margin-bottom: 4rem'};\n  ${props => props.sectionTitle && 'text-align: center'};\n`;\n\nexport default Subline;\n","import styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: 1fr minmax(320px, 1000px) 1fr;\n  padding: 0 1rem;\n`;\n\nexport default Wrapper;\n"],"sourceRoot":""}